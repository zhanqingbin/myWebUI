/**
 *  @name:      redcore-webUI
 *  @version:   1.0.0
 *  @author:    redcore
 *  @desc:      redcore 内核webUI 页面开发
 *  @license:   ISC
 *  @copyright: Copyright 2018 The Redcore (Beijing) Technology Co.,Ltd. All rights reserved.
 */
{"version":3,"sources":["login/HomeBrowser.js"],"names":["HomeBrowser","prototype","PROXYCALLBACK","trimSchema","str","substr","length","slice","init","callback","chrome","send","command","cmd","args","setParamCallback","key","setLoggingStatusCallback","setAutoLoginCallback","setManagerAddressCallback","setDomainCallback","setCompanyIdCallback","setAccountInfoCallback","setPasswordCallback","getParamCallback","value","getDeviveIdCallback","getFirstLoginCallback","getLoggingStatusCallback","Number","getAutoLoginCallback","getManagerAddressCallback","getDomainCallback","getCompanyIdCallback","ret","JSON","parse","getAppGroupListCallback","getAccountInfoCallback","getPasswordCallback","domain","getLastLoginInfoCallback","getDeviceInfoCallback","deviceInfo","getCityCallback","cityInfo","getCityInfoCallback","configDataChanged","data","msg","logOutCallback","loginStatusChanged"],"mappings":"AAIA,IAAIA,YAAc,aAClBA,YAAYC,UAAY,WACpB,IAAIC,EAAgB,KAGpB,SAASC,EAAWC,GAQhB,MANW,WAEPA,EAAIC,OAAO,EAFJ,UAEYC,QACnBF,EAAMA,EAAIG,MAHH,UAGcD,QAFb,YAGHF,EAAIC,OAAO,EAHR,WAGiBC,UACzBF,EAAMA,EAAIG,MAJF,WAIcD,SACnBF,EAwHX,MAAO,CAEHI,KAAO,SAAUC,GACbP,EAAgBO,EAChBC,OAAOC,KAAK,WAAY,CAAC,iBAG7BC,QAAS,SAAUC,EAAKC,GAAQJ,OAAOC,KAAKE,EAAKC,IAGjDC,iBA/HoB,SAAUC,GAC9B,GAAqB,MAAjBd,EAGJ,OAAQc,GACJ,IAAK,gBACDd,EAAce,2BACd,MACJ,IAAK,YACDf,EAAcgB,uBACd,MACJ,IAAK,iBACDhB,EAAciB,4BACd,MACJ,IAAK,SACDjB,EAAckB,oBACd,MACJ,IAAK,YACDlB,EAAcmB,uBACd,MACJ,IAAK,cACDnB,EAAcoB,yBACd,MACJ,IAAK,WACDpB,EAAcqB,wBAyGtBC,iBAnGoB,SAAUR,EAAKS,GACnC,GAAqB,MAAjBvB,EAGJ,OAAQc,GACJ,IAAK,WACDd,EAAcwB,oBAAoBD,GAAS,IAC3C,MACJ,IAAK,aACDvB,EAAcyB,sBAA+B,KAATF,GACpC,MACJ,IAAK,gBACDvB,EAAc0B,yBAAyB,IAAIC,OAAOJ,IAClD,MACJ,IAAK,YACDvB,EAAc4B,qBAA8B,KAATL,GACnC,MACJ,IAAK,iBACGA,IACAA,EAAQtB,EAAWsB,IACvBvB,EAAc6B,0BAA0BN,GACxC,MACJ,IAAK,SACDvB,EAAc8B,kBAAkBP,GAChC,MACJ,IAAK,YACDvB,EAAc+B,qBAAqBR,GACnC,MACJ,IAAK,eACGA,IAEIS,EAAMC,KAAKC,MAAMX,KAEjBvB,EAAcmC,wBAAwBH,GAE9C,MACJ,IAAK,cAGG,IAAIA,EAFJT,IAEIS,EAAMC,KAAKC,MAAMX,KAEjBvB,EAAcoC,uBAAuBJ,GAE7C,MACJ,IAAK,WACDhC,EAAcqC,oBAAoBd,GAClC,MACJ,IAAK,iBACDA,EAAQU,KAAKC,MAAMX,KACNA,EAAMe,SACff,EAAMe,OAASrC,EAAWsB,EAAMe,SACpCtC,EAAcuC,yBAAyBhB,KAkD/CiB,sBAA4B,SAAUC,GAAczC,EAAcwC,sBAAsBC,IAExFC,gBAA4B,SAAUC,GAAY3C,EAAc4C,oBAAoBD,IAEpFE,kBAhDqB,SAAUC,EAAMC,GAC3C,GAAY,UAARA,EACAvC,OAAOC,KAAK,WAAY,CAAC,gBACzBD,OAAOC,KAAK,WAAY,CAAC,iBACzBT,EAAc0B,yBAAyB,IAAIC,OAAOmB,SACzC,GAAY,WAARC,EACb/C,EAAcgD,sBACL,GAAY,gBAARD,EACHD,IACId,EAAMC,KAAKC,MAAMY,KAEjB9C,EAAcmC,wBAAwBH,QAE3C,GAAY,gBAARe,EACHD,IACId,EAAMC,KAAKC,MAAMY,KAEjB9C,EAAcoC,uBAAuBJ,QAE1C,GAAY,aAARe,EAAoB,CAEvB,IAAIf,EADJc,IACId,EAAMC,KAAKC,MAAMY,KAEjB9C,EAAcmC,wBAAwBH,QAG9ChC,EAAc0B,yBAAyB,IAAIC,OAAOmB,GAAOC,IAwB7DE,mBAA4B,WAAYzC,OAAOC,KAAK,WAAY,CAAC,oBAxJjD","file":"../../src/login/HomeBrowser.js","sourcesContent":["/**\r\n * HomeBrowser.js  与浏览器交互的功能js\r\n */\r\n\r\nvar HomeBrowser = function () {};\r\nHomeBrowser.prototype = function () {\r\n    var PROXYCALLBACK = null;\r\n    // 浏览器的设置参数完成的回调方法\r\n\r\n    function trimSchema(str)\r\n    {\r\n        var http = \"http://\";\r\n        var https = \"https://\";\r\n        if (str.substr(0, http.length) == http)\r\n            str = str.slice(http.length);\r\n        else if (str.substr(0, https.length) == https)\r\n            str = str.slice(https.length);\r\n        return str;\r\n    }\r\n\r\n    var _setParamCallback = function (key) {\r\n        if (PROXYCALLBACK == null)\r\n            return;\r\n        // 根据key去分别调用不同模块的业务方法\r\n        switch (key) {\r\n            case \"loggingStatus\":\r\n                PROXYCALLBACK.setLoggingStatusCallback();\r\n                break;\r\n            case \"autoLogin\":\r\n                PROXYCALLBACK.setAutoLoginCallback();\r\n                break;\r\n            case \"managerAddress\":\r\n                PROXYCALLBACK.setManagerAddressCallback();\r\n                break;\r\n            case \"domain\":\r\n                PROXYCALLBACK.setDomainCallback();\r\n                break;\r\n            case \"companyId\":\r\n                PROXYCALLBACK.setCompanyIdCallback();\r\n                break;\r\n            case \"accountInfo\":\r\n                PROXYCALLBACK.setAccountInfoCallback();\r\n                break;\r\n            case \"password\":\r\n                PROXYCALLBACK.setPasswordCallback();\r\n                break;\r\n        }\r\n    };\r\n\r\n    // 浏览器的获取参数完成的回调方法\r\n    var _getParamCallback = function (key, value) {\r\n        if (PROXYCALLBACK == null)\r\n            return;\r\n        // 根据key去分别调用不同模块的业务方法\r\n        switch (key) {\r\n            case \"deviceId\":\r\n                PROXYCALLBACK.getDeviveIdCallback(value || '');\r\n                break;\r\n            case \"firstLogin\":\r\n                PROXYCALLBACK.getFirstLoginCallback(value == \"1\" ? true : false);\r\n                break;\r\n            case \"loggingStatus\":\r\n                PROXYCALLBACK.getLoggingStatusCallback(new Number(value));\r\n                break;\r\n            case \"autoLogin\":\r\n                PROXYCALLBACK.getAutoLoginCallback(value == \"1\" ? true : false);\r\n                break;\r\n            case \"managerAddress\":\r\n                if (value)\r\n                    value = trimSchema(value);\r\n                PROXYCALLBACK.getManagerAddressCallback(value);\r\n                break;\r\n            case \"domain\":\r\n                PROXYCALLBACK.getDomainCallback(value);\r\n                break;\r\n            case \"companyId\":\r\n                PROXYCALLBACK.getCompanyIdCallback(value);\r\n                break;\r\n            case \"appGroupList\":\r\n                if (value)\r\n                {\r\n                    var ret = JSON.parse(value);\r\n                    if (ret)\r\n                        PROXYCALLBACK.getAppGroupListCallback(ret);\r\n                }\r\n                break;\r\n            case \"accountInfo\":\r\n                if (value)\r\n                {\r\n                    var ret = JSON.parse(value);\r\n                    if (ret)\r\n                        PROXYCALLBACK.getAccountInfoCallback(ret);\r\n                }\r\n                break;\r\n            case \"password\":\r\n                PROXYCALLBACK.getPasswordCallback(value);\r\n                break;\r\n            case \"lastLoginInfo\":\r\n                value = JSON.parse(value);\r\n                if (value && value.domain)\r\n                    value.domain = trimSchema(value.domain);\r\n                PROXYCALLBACK.getLastLoginInfoCallback(value);\r\n                break;\r\n        }\r\n    };\r\n\r\n    // 当登录完成后浏览器回调此接口\r\n    var _configDataChanged = function (data, msg) {\r\n\t\tif (msg === \"login\") {\r\n\t\t    chrome.send(\"getParam\", [\"accountInfo\"]);\r\n\t\t    chrome.send(\"getParam\", [\"appGroupList\"]);\r\n\t\t    PROXYCALLBACK.getLoggingStatusCallback(new Number(data));\r\n        } else if (msg === \"logout\") {\r\n\t\t    PROXYCALLBACK.logOutCallback();\r\n        } else if (msg === \"application\") {\r\n            if (data) {\r\n                var ret = JSON.parse(data);\r\n                if (ret)\r\n                    PROXYCALLBACK.getAppGroupListCallback(ret);\r\n            }\r\n        } else if (msg === \"accountInfo\") {\r\n            if (data) {\r\n                var ret = JSON.parse(data);\r\n                if (ret)\r\n                    PROXYCALLBACK.getAccountInfoCallback(ret);\r\n            }\r\n        } else if (msg === \"strategy\") {\r\n            if (data) {\r\n                var ret = JSON.parse(data);\r\n                if (ret)\r\n                    PROXYCALLBACK.getAppGroupListCallback(ret);\r\n            }\r\n        } else {\r\n            PROXYCALLBACK.getLoggingStatusCallback(new Number(data), msg);\r\n        }\r\n    };\r\n\r\n    return {\r\n        // 上层调用此方法初始化与浏览器通信模块\r\n        init : function (callback) {\r\n            PROXYCALLBACK = callback;\r\n            chrome.send(\"setParam\", [\"initialized\"]);\r\n        },\r\n        // 上层调用此方法来调用相应WebUI Native的接口 \r\n        command: function (cmd, args) { chrome.send(cmd, args) },\r\n\r\n        // 浏览器设置参数调用完成后，回调此方法\r\n        setParamCallback          : _setParamCallback,\r\n        // 浏览器获取参数调用完成后，回调此方法\r\n        getParamCallback          : _getParamCallback,\r\n        // 获得设备信息的回调方法\r\n        getDeviceInfoCallback     : function (deviceInfo) { PROXYCALLBACK.getDeviceInfoCallback(deviceInfo); },\r\n        // 当浏览器获取当前城市后回调此接口\r\n        getCityCallback           : function (cityInfo) { PROXYCALLBACK.getCityInfoCallback(cityInfo); },\r\n        // 当前用户配置信息发生改变时调用此接口\r\n        configDataChanged         : _configDataChanged,\r\n        // 当浏览器登录状态改变后调用此接口\r\n        loginStatusChanged        : function(){ chrome.send(\"getParam\", [\"loggingStatus\"]); }\r\n    };\r\n} ();\r\n"]}